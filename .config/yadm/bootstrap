#!/usr/bin/env bash

##
## configuration
##

remove_packages=(
    firefox
    'libreoffice-*'
)

copr_repos=(
    agriffis/neovim-nightly
)

repo_files=(
    https://download.opensuse.org/repositories/home:TheLocehiliosan:yadm/Fedora_37/home:TheLocehiliosan:yadm.repo
)

install_packages=(
    '@Development Tools'
    kitty
    gh
    git
    neovim
    zsh
    google-chrome-stable
    unzip
    zip
    'dnf-command(copr)'
    yadm
)

##
## setup
##

install_brew ()
{
    if ! command -v brew >/dev/null 2>&1; then
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"    
    fi

    if [ -f "$HOME/.Brewfile" ]; then
        echo "Updating Homebrew bundle"
        brew bundle --global
    fi
}

install_nix ()
{
  # This one courtesy of:
  # https://github.com/shadowrylander/shadowrylander/blob/35bb51822c46578d0a5da5810263fa85d464043c/.config/yadm/bootstrap#L56
  install_nix_bin() {
    curl -L https://nixos.org/nix/install | sh
    if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
      . "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
    fi
  }
  command -v nix >/dev/null 2>&1 || install_nix_bin

  if [ -f "$HOME/.config/nix/installed_packages" ]; then
    # This list created with `nix-env -qaPs|grep '^I'|awk '{print $2}' > ~/.config/nix/installed_packages`
    xargs nix-env -iA < "$HOME/.config/nix/installed_packages"
  fi
  if [ -f "$HOME/.config/nix/installed_packages.local" ]; then
    # Additional packages that might be needed here or there
    xargs nix-env -i < "$HOME/.config/nix/installed_packages.local"
    #cat "$HOME/.config/nix/installed_packages.local" | xargs nix-env -i
  fi
}

install_omzsh()
{
    if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
        KEEP_ZSHRC=yes RUNZSH=no CHSH=no sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    fi

    if [[ "$(uname -s)" = "Linux" && "$NO_ZSH_SET" != "1" ]]; then
        sudo usermod -s /bin/zsh "$USER"
    fi

    if [[ ! -d "$HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting" ]]; then
        mkdir -p "$HOME/.oh-my-zsh/custom/plugins"
        git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
    fi

    if [[ ! -d "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions" ]]; then
        mkdir -p "$HOME/.oh-my-zsh/custom/plugins"
        git clone https://github.com/zsh-users/zsh-autosuggestions.git "$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
    fi
}

install_chrome_repo()
{
    if [[ -f /etc/yum.repos.d/google-chrome.repo ]]; then
    sudo tee /etc/yum.repos.d/google-chrome.repo > /dev/null <<EOT
[google-chrome]
name=google-chrome
baseurl=https://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled=1
gpgcheck=1
gpgkey=https://dl.google.com/linux/linux_signing_key.pub
EOT
    fi
}

install_fonts()
{
    mkdir -p "$HOME/.local/share/fonts"

    if [[ ! -f "$HOME/.local/share/fonts/Fira Code Regular Nerd Font Complete.ttf" ]]; then
        curl -L https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/FiraCode.zip -o /tmp/FiraCode.zip
        cd "$HOME/.local/share/fonts" && unzip -o /tmp/FiraCode.zip
        rm /tmp/FiraCode.zip
    fi

    if [[ ! -f "$HOME/.local/share/fonts/Mononoki Nerd Font Complete.ttf" ]]; then
        curl -L https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/Mononoki.zip -o /tmp/Mononoki.zip
        cd "$HOME/.local/share/fonts" && unzip -o /tmp/Mononoki.zip
        rm /tmp/Mononoki.zip
    fi

    fc-cache -fv
}

install_docker()
{
    if ! rpm -q docker-ce &>/dev/null; then
        $dnfcmd config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
        $dnfcmd install docker-ce docker-ce-cli containerd.io docker-compose-plugin
        sudo systemctl enable --now docker.service
    fi

    if ! groups hayden | grep -q '\bdocker\b'; then
        sudo usermod -aG docker "$USER"
    fi
}

install_1password()
{
    if [[ ! -f /etc/yum.repos.d/1password.repo ]]; then
        sudo rpm --import https://downloads.1password.com/linux/keys/1password.asc
        sudo tee /etc/yum.repos.d/1password.repo > /dev/null <<EOT
[1password]
name=1Password Beta Channel
baseurl=https://downloads.1password.com/linux/rpm/beta/\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey="https://downloads.1password.com/linux/keys/1password.asc"
EOT
    fi

    if ! rpm -q 1password &>/dev/null; then
        $dnfcmd install 1password
    fi

    if ! rpm -q 1password-cli &>/dev/null; then
        $dnfcmd install 1password-cli
    fi
}

install_nvm()
{
    if [[ ! -d "$HOME/.nvm" ]]; then
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm install --lts
    fi
}

dnfcmd="sudo dnf -y"

$dnfcmd update
$dnfcmd remove "${remove_packages[@]}"

install_chrome_repo

for repo in "${copr_repos[@]}"
do
    $dnfcmd copr enable "$repo"
done

for repo in "${repo_files[@]}"
do
    $dnfcmd config-manager --add-repo "$repo"
done

$dnfcmd install "${install_packages[@]}"

test -d "$HOME/.config/nvim" || git clone gh:hbjydev/init.lua "$HOME/.config/nvim"

install_brew
install_nix
install_omzsh
install_docker
install_fonts
install_1password
install_nvm
